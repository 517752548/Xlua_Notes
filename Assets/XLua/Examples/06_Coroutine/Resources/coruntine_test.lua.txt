-- Tencent is pleased to support the open source community by making xLua available.
-- Copyright (C) 2016 THL A29 Limited, a Tencent company. All rights reserved.
-- Licensed under the MIT License (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at
-- http://opensource.org/licenses/MIT
-- Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.

local util = require 'xlua.util'
 local yield_return = (require 'cs_coroutine').yield_return  --绑定yeild return,绑定实现看不懂的话可以拿来复用

local co = coroutine.create(function()   --lua语言开始协程
    print('coroutine start!')
    local s = os.time()   --记录当前时间
    yield_return(CS.UnityEngine.WaitForSeconds(3))  --过3秒再执行
    print('wait interval:', os.time() - s)  --打印过了多久
	    
     local www = CS.UnityEngine.WWW('http://www.baidu.com')  
     yield_return(www)   --等到download完成后再执行下一步
	 if not www.error then
        print(www.bytes)
	 else
	    print('error:', www.error)  --URL无效的时候报错
	 end
end)
assert(coroutine.resume(co)) --执行这个协程，如果出错，抛出异常


--local function DoCoroutine()
--return util.cs_generator(function()
--coroutine.yield(CS.UnityEngine.WaitForSeconds(3))
-- print('wait interval:')
-- end);
-- end
--local Test=m_CSBehaviour.StartCoroutine(DoCoroutine());
